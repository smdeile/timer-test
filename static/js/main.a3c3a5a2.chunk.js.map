{"version":3,"sources":["App.js","index.js"],"names":["App","useState","sec","setSec","status","setStatus","timer","setTimer","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","useCallback","stop","reset","isDoubleClick","timeNow","Date","getTime","isFastDoubleClick","className","toISOString","slice","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAIe,SAASA,IAAO,IAAD,EACNC,mBAAS,GADH,mBACrBC,EADqB,KAChBC,EADgB,OAEAF,mBAAS,QAFT,mBAErBG,EAFqB,KAEbC,EAFa,OAGFJ,mBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,KAK5BC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAQzB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXV,GACFD,GAAO,SAACY,GAAD,OAASA,EAAM,UAGrB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACb,IAEJ,IAAMc,EAAQC,uBAAY,WACxBd,EAAU,SACT,IAEGe,EAAOD,uBAAY,WACvBd,EAAU,QACVF,EAAO,KACN,IAEGkB,EAAQF,uBAAY,WACxBhB,EAAO,KACN,IAEGmB,EAAgBH,uBAAY,WAChC,IAAMI,GAAU,IAAIC,MAAOC,UAErBC,EAAoBH,EAAUjB,EAAQ,IAC5CC,EAASgB,GAELG,GACFrB,EAAU,UAEX,CAACC,IAEJ,OACE,gCACE,qBAAKqB,UAAU,eACf,sBAAKA,UAAU,UAAf,UACE,8BACE,oBAAIA,UAAU,eAAd,SACG,IAAIH,KAAKtB,GAAK0B,cAAcC,MAAM,GAAI,QAG3C,sBAAKF,UAAU,cAAf,UACE,wBAAQA,UAAU,eAAeG,QAASZ,EAA1C,mBAGA,wBAAQS,UAAU,cAAcG,QAASV,EAAzC,kBAGA,wBAAQU,QAAST,EAAjB,mBACA,wBAAQS,QAASR,EAAjB,wBAEG,O,MC9DbS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAD,MAEFkC,SAASC,eAAe,W","file":"static/js/main.a3c3a5a2.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { interval, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nexport default function App() {\n  const [sec, setSec] = useState(0);\n  const [status, setStatus] = useState(\"stop\");\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n    interval(1000)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (status === \"run\") {\n          setSec((val) => val + 1000);\n        }\n      });\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [status]);\n\n  const start = useCallback(() => {\n    setStatus(\"run\");\n  }, []);\n\n  const stop = useCallback(() => {\n    setStatus(\"stop\");\n    setSec(0);\n  }, []);\n\n  const reset = useCallback(() => {\n    setSec(0);\n  }, []);\n\n  const isDoubleClick = useCallback(() => {\n    const timeNow = new Date().getTime();\n\n    const isFastDoubleClick = timeNow - timer < 300;\n    setTimer(timeNow);\n\n    if (isFastDoubleClick) {\n      setStatus(\"wait\");\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <div className=\"background\"></div>\n      <div className=\"wrapper\">\n        <div>\n          <h2 className=\"timerDisplay\">\n            {new Date(sec).toISOString().slice(11, 19)}\n          </h2>\n        </div>\n        <div className=\"buttonBlock\">\n          <button className=\"start-button\" onClick={start}>\n            Start\n          </button>\n          <button className=\"stop-button\" onClick={stop}>\n            Stop\n          </button>\n          <button onClick={reset}>Reset</button>\n          <button onClick={isDoubleClick}>Wait</button>\n        </div>\n      </div>{\" \"}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}